import javax.swing.*;
import java.awt.*;

/**
 * Frame representing the battle screen. Allows the user to interact with the
 * battle phase of the game. The user can choose to attack, swap creatures,
 * catch creatures and many more that is in the battle phase.
 *
 * Model-View-Controller (MVC) pattern: VIEW
 *
 * @author Shinoruba
 * @author JSTP8330
 * @version 1.0
 */

public class BattleScreenFrame extends javax.swing.JFrame {
    private BattlePhase battlePhase;
    private Creature    userCreature, enemyCreature;
    private Inventory   currentInventory;

    /**
     * Creates new form BattleScreenFrame
     */
    public BattleScreenFrame(BattlePhase battlePhase) {
        initComponents();
        this.battlePhase = battlePhase;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        activeCreaturePan = new javax.swing.JPanel();
        activeCreatureLabel = new javax.swing.JLabel();
        userImage = new javax.swing.JLabel();
        enemyCreaturePan = new javax.swing.JPanel();
        enemyCreatureLabel = new javax.swing.JLabel();
        enemyImage = new javax.swing.JLabel();
        activeCreatureNameELPan = new javax.swing.JPanel();
        activeCreatureLabel1 = new javax.swing.JLabel();
        activeCreatureLabel2 = new javax.swing.JLabel();
        userCreatureName = new javax.swing.JTextField();
        userCreatureEL = new javax.swing.JTextField();
        userCreatureHP = new javax.swing.JTextField();
        enemyCreatureNameELPan = new javax.swing.JPanel();
        activeCreatureLabel3 = new javax.swing.JLabel();
        activeCreatureLabel4 = new javax.swing.JLabel();
        enemyCreatureName = new javax.swing.JTextField();
        enemyCreatureEL = new javax.swing.JTextField();
        enemyCreatureHP = new javax.swing.JTextField();
        fourButtonsPanel = new javax.swing.JPanel();
        exitButton = new javax.swing.JButton();
        catchButton = new javax.swing.JButton();
        swapButton = new javax.swing.JButton();
        attackButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        activeCreaturePan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        activeCreatureLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        activeCreatureLabel.setText("Active Creature:");

        userImage.setText("jLabel3");

        javax.swing.GroupLayout activeCreaturePanLayout = new javax.swing.GroupLayout(activeCreaturePan);
        activeCreaturePan.setLayout(activeCreaturePanLayout);
        activeCreaturePanLayout.setHorizontalGroup(
            activeCreaturePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(activeCreaturePanLayout.createSequentialGroup()
                .addGroup(activeCreaturePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(activeCreaturePanLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(activeCreatureLabel))
                    .addGroup(activeCreaturePanLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(userImage, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        activeCreaturePanLayout.setVerticalGroup(
            activeCreaturePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(activeCreaturePanLayout.createSequentialGroup()
                .addComponent(activeCreatureLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userImage, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 46, Short.MAX_VALUE))
        );

        userImage.getAccessibleContext().setAccessibleName("activeCreatureImagePlaceholder");

        enemyCreaturePan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        enemyCreatureLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        enemyCreatureLabel.setText("Enemy Creature:");

        enemyImage.setText("jLabel4");

        javax.swing.GroupLayout enemyCreaturePanLayout = new javax.swing.GroupLayout(enemyCreaturePan);
        enemyCreaturePan.setLayout(enemyCreaturePanLayout);
        enemyCreaturePanLayout.setHorizontalGroup(
            enemyCreaturePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enemyCreaturePanLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(enemyCreatureLabel)
                .addGap(68, 68, 68))
            .addGroup(enemyCreaturePanLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(enemyImage, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        enemyCreaturePanLayout.setVerticalGroup(
            enemyCreaturePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enemyCreaturePanLayout.createSequentialGroup()
                .addComponent(enemyCreatureLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enemyImage, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        enemyImage.getAccessibleContext().setAccessibleName("enemyCreatureImagePlaceholder");

        activeCreatureLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        activeCreatureLabel1.setText("Name:");

        activeCreatureLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        activeCreatureLabel2.setText("EL:");

        userCreatureName.setText("editTextActiveCreatureName");

        userCreatureEL.setText("userEL");

        userCreatureHP.setText("userHP");

        javax.swing.GroupLayout activeCreatureNameELPanLayout = new javax.swing.GroupLayout(activeCreatureNameELPan);
        activeCreatureNameELPan.setLayout(activeCreatureNameELPanLayout);
        activeCreatureNameELPanLayout.setHorizontalGroup(
            activeCreatureNameELPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(activeCreatureNameELPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(activeCreatureNameELPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(activeCreatureLabel1)
                    .addComponent(activeCreatureLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(activeCreatureNameELPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userCreatureHP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userCreatureEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userCreatureName, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        activeCreatureNameELPanLayout.setVerticalGroup(
            activeCreatureNameELPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(activeCreatureNameELPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(activeCreatureNameELPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activeCreatureLabel1)
                    .addComponent(userCreatureName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userCreatureHP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(activeCreatureNameELPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activeCreatureLabel2)
                    .addComponent(userCreatureEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        activeCreatureLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        activeCreatureLabel3.setText("Name:");

        activeCreatureLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        activeCreatureLabel4.setText("EL:");

        enemyCreatureName.setText("editTextEnemyCreatureName");

        enemyCreatureEL.setText("enemyEL");

        enemyCreatureHP.setText("enemyHP");

        javax.swing.GroupLayout enemyCreatureNameELPanLayout = new javax.swing.GroupLayout(enemyCreatureNameELPan);
        enemyCreatureNameELPan.setLayout(enemyCreatureNameELPanLayout);
        enemyCreatureNameELPanLayout.setHorizontalGroup(
            enemyCreatureNameELPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enemyCreatureNameELPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(enemyCreatureNameELPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(activeCreatureLabel3)
                    .addComponent(activeCreatureLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(enemyCreatureNameELPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enemyCreatureName, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(enemyCreatureNameELPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(enemyCreatureHP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(enemyCreatureEL, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        enemyCreatureNameELPanLayout.setVerticalGroup(
            enemyCreatureNameELPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enemyCreatureNameELPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(enemyCreatureNameELPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activeCreatureLabel3)
                    .addComponent(enemyCreatureName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(enemyCreatureHP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(enemyCreatureNameELPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activeCreatureLabel4)
                    .addComponent(enemyCreatureEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        exitButton.setText("Run Away..");
        exitButton.setMaximumSize(new java.awt.Dimension(111, 23));
        exitButton.setMinimumSize(new java.awt.Dimension(111, 23));
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        catchButton.setText("Attempt Catch!");
        catchButton.setPreferredSize(new java.awt.Dimension(86, 23));
        catchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catchButtonActionPerformed(evt);
            }
        });

        swapButton.setText("Swap Creature");
        swapButton.setMaximumSize(new java.awt.Dimension(111, 23));
        swapButton.setMinimumSize(new java.awt.Dimension(111, 23));
        swapButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swapButtonActionPerformed(evt);
            }
        });

        attackButton.setText("Attack Creature!");
        attackButton.setMaximumSize(new java.awt.Dimension(111, 23));
        attackButton.setMinimumSize(new java.awt.Dimension(111, 23));
        attackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fourButtonsPanelLayout = new javax.swing.GroupLayout(fourButtonsPanel);
        fourButtonsPanel.setLayout(fourButtonsPanelLayout);
        fourButtonsPanelLayout.setHorizontalGroup(
            fourButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fourButtonsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(fourButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(catchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(swapButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(attackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        fourButtonsPanelLayout.setVerticalGroup(
            fourButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fourButtonsPanelLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(swapButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(attackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(catchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        catchButton.getAccessibleContext().setAccessibleName("AttemptCatch");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(activeCreatureNameELPan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(activeCreaturePan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 140, Short.MAX_VALUE)
                        .addComponent(enemyCreaturePan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fourButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(enemyCreatureNameELPan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(activeCreaturePan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(enemyCreaturePan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(activeCreatureNameELPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fourButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enemyCreatureNameELPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        activeCreaturePan.getAccessibleContext().setAccessibleName("activeCreaturePanel");
        enemyCreaturePan.getAccessibleContext().setAccessibleName("enemyCreaturePanel");
        activeCreatureNameELPan.getAccessibleContext().setAccessibleName("userNameELpanel");
        enemyCreatureNameELPan.getAccessibleContext().setAccessibleName("enemyNameELpanel");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void catchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catchButtonActionPerformed
        // Attempt to capture the enemy creature
        boolean captureSuccess = battlePhase.tryCaptureCreature(enemyCreature);

        // Update UI or perform other actions based on the result
        if (captureSuccess) {
            updateBattleStatus();
        } else {
            // Capture attempt failed, update UI or take necessary actions
            displayMessage("Capture attempt failed.");
        }
    }//GEN-LAST:event_catchButtonActionPerformed

    private void swapButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swapButtonActionPerformed
        if(currentInventory.getSize() > 1)
                    {
                        battlePhase.displayInventory(); // Display the user's inventory
                        int swapChoice = InputHandler.getUserSwapChoice(currentInventory);

                        if (swapChoice >= 1 && swapChoice <= currentInventory.getSize()) 
                        {
                            Creature newActiveCreature = currentInventory.getAllCreatures().get(swapChoice - 1);
                            currentInventory.setActiveCreature(newActiveCreature);
                            userCreature = newActiveCreature; // Update in the BattlePhase
                            System.out.println(userCreature.getName() + " is swapped with " + newActiveCreature.getName() + ".");
                        } 
                        else 
                        {
                            System.out.println("Invalid creature selection.");
                        }
                    } 
                else 
                {
                     System.out.println("You don't have any other creatures to swap with.");
                }
    }//GEN-LAST:event_swapButtonActionPerformed

    private void attackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackButtonActionPerformed
         // Perform an attack
        int userDamage = battlePhase.calculateUserDamage(userCreature, enemyCreature);
        enemyCreature.setHealth(enemyCreature.getHealth() - userDamage);

        // Update UI
        updateBattleStatus();

        // Check if the enemy is defeated
        if (enemyCreature.getHealth() <= 0) {
            displayMessage(enemyCreature.getName() + " is defeated!");
            setVisible(false);
        } else {
            // Enemy retaliates
            int enemyDamage = battlePhase.calculateEnemyDamage();
            userCreature.setHealth(userCreature.getHealth() - enemyDamage);

            // Update UI
            updateBattleStatus();

            // Check if the user is defeated
            if (userCreature.getHealth() <= 0) {
                displayMessage("You are defeated!");
                currentInventory.removeCreature(userCreature);
                displayMessage("You've been returned to a safe location.");
                setVisible(false);
            }
        }
    }//GEN-LAST:event_attackButtonActionPerformed

    // Helper method to update the battle status UI
    private void updateBattleStatus() {

            // Update relevant UI components based on the current battle state
            // (e.g., display health, messages, etc.)
            // Update user creature's health
            userCreatureHP.setText("Health: " + userCreature.getHealth());

            // Update enemy creature's health
            enemyCreatureHP.setText("Health: " + enemyCreature.getHealth());

            // Check if the battle is over
            if (userCreature.getHealth() <= 0) {
                // User is defeated, update UI accordingly
                displayMessage("You are defeated!");
                currentInventory.removeCreature(userCreature);
                System.out.println("You've been returned to a safe location.");
                
            } else if (enemyCreature.getHealth() <= 0) {
                // Enemy is defeated, update UI accordingly
                displayMessage(enemyCreature.getName() + " is defeated!");
                // Handle other actions after defeating the enemy
                // ...

            } else {
                // The battle continues, update any other relevant UI components
                // (e.g., messages, images, etc.)
                // ...
            }
    }

    // Helper method to display messages to the user
    private void displayMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel activeCreatureLabel;
    private javax.swing.JLabel activeCreatureLabel1;
    private javax.swing.JLabel activeCreatureLabel2;
    private javax.swing.JLabel activeCreatureLabel3;
    private javax.swing.JLabel activeCreatureLabel4;
    private javax.swing.JPanel activeCreatureNameELPan;
    private javax.swing.JPanel activeCreaturePan;
    private javax.swing.JButton attackButton;
    private javax.swing.JButton catchButton;
    private javax.swing.JTextField enemyCreatureEL;
    private javax.swing.JTextField enemyCreatureHP;
    private javax.swing.JLabel enemyCreatureLabel;
    private javax.swing.JTextField enemyCreatureName;
    private javax.swing.JPanel enemyCreatureNameELPan;
    private javax.swing.JPanel enemyCreaturePan;
    private javax.swing.JLabel enemyImage;
    private javax.swing.JButton exitButton;
    private javax.swing.JPanel fourButtonsPanel;
    private javax.swing.JButton swapButton;
    private javax.swing.JTextField userCreatureEL;
    private javax.swing.JTextField userCreatureHP;
    private javax.swing.JTextField userCreatureName;
    private javax.swing.JLabel userImage;
    // End of variables declaration//GEN-END:variables
}